@page "/categories"
@using Client
@using FolkDanceTime.Web.Components
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject ICategoryClient CategoryClient

<PageTitle>Categories</PageTitle>

<MudStack Row Justify="Justify.SpaceBetween">
    <MudText Typo="Typo.h4">Categories</MudText>
    <MudIconButton
        Color="Color.Primary"
        Icon="@Icons.Filled.AddCircle"
        OnClick="@(() => showAdd = true)"
    />
</MudStack>

@if (categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudStack Spacing="2">
        @foreach (var category in categories)
        {
            <CategoryListItem
                Category="@category"
                OnDelete="@OnDelete"
            />
        }
        @if (showAdd)
        {
            <AddCategory
                OnClose="() => showAdd = false"
                OnAdd="@OnAdd"
            />
        }
    </MudStack>
}

@code {
    private ICollection<CategoryDto> categories;
    private bool showAdd = false;

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryClient.GetCategoriesAsync();
    }

    protected void OnAdd(CategoryDto newCategory)
    {
        categories.Add(newCategory);
    }

    protected void OnDelete(int id)
    {
        categories = categories.Where(c => c.Id != id).ToList();
    }
}
