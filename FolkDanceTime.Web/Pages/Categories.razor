@page "/categories"
@using Client
@using FolkDanceTime.Web.Components
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject ICategoryClient CategoryClient

<PageTitle>Categories</PageTitle>

<div class="d-flex flex-row justify-content-between">
    <MudText Typo="Typo.h4">Categories</MudText>
    <MudIconButton
        Color="Color.Primary"
        Icon="@Icons.Filled.AddCircle"
        OnClick="@(() => showAdd = true)"
    />
</div>

@if (categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var category in categories)
    {
        <div class="pb-2">
            <CategoryListItem
                Category="@category"
                OnDelete="@OnDelete"
            />
        </div>
    }
    @if (showAdd)
    {
        <AddCategory
            OnClose="() => showAdd = false"
            OnAdd="@OnAdd"
        />
    }
}

@code {
    private ICollection<CategoryDto> categories;
    private bool showAdd = false;

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryClient.GetCategoriesAsync();
    }

    protected void OnAdd(CategoryDto newCategory)
    {
        categories.Add(newCategory);
    }

    protected void OnDelete(int id)
    {
        categories = categories.Where(c => c.Id != id).ToHashSet();
    }
}
