@page "/items"
@using Client
@using FolkDanceTime.Web.Components
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject IItemClient ItemClient
@inject IDialogService DialogService

<PageTitle>Items</PageTitle>

<MudStack Row Justify="Justify.SpaceBetween">
    <MudText Typo="Typo.h4">Items</MudText>
    <MudIconButton
        Color="Color.Primary"
        Icon="@Icons.Filled.AddCircle"
        OnClick="@OpenDialog"
    />
</MudStack>

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudGrid Spacing="2">
        @foreach (var item in items)
        {
            <MudItem>
                <ItemCard
                    Item="@item"
                    OnDelete="@OnDelete"
                />
            </MudItem>
        }
    </MudGrid>
}

@code {
    private ICollection<ItemDto> items;

    protected override async Task OnInitializedAsync()
    {
        items = await ItemClient.GetItemsAsync();
    }

    protected void OnDelete(ItemDto item)
    {
        items.Remove(item);
    }

    private async void OpenDialog()
    {
        var dialog = DialogService.Show<AddItemDialog>("Create Item");
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            items.Add((ItemDto)result.Data);
            StateHasChanged();
        }
    }
}
