@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Folk Dance Time</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @if(isAdmin)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="categories">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Categories
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="items">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Items
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="transaction-history">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Transaction History
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="transactions">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Transactions
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool isAdmin = false;

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var role = user.FindFirst(c => c.Type == "role");
            if(role != null && role.Value == "Admin")
            {
                isAdmin = true;
            }
        }
    }
}
