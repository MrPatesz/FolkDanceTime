@using Client
@inject NavigationManager NavigationManager
@inject IItemSetClient ItemSetClient
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudPaper
    Class="cursor-pointer"
    @onclick="@NavigateToDetails"
    Style="@($"background:{Colors.DeepPurple.Lighten4};")"
>
    <MudStack Spacing="0" Justify="Justify.SpaceBetween">
        <MudStack
            Row
            Justify="Justify.SpaceBetween"
            AlignItems="AlignItems.Center"
        >
            <MudText Class="px-3">
                @ItemSet.Name
            </MudText>
            <MudIconButton
                Color="Color.Error"
                Icon="@Icons.Filled.RemoveCircle"
                OnClick="@DeleteItemSet"
            />
        </MudStack>
        <MudStack Spacing="1" Class="px-1 pb-1">
            @foreach(var item in ItemSet.Items)
            {
                <BasicItemListView
                    Item="item"
                />
            }
        </MudStack>
    </MudStack>
</MudPaper>

@code {
    [Parameter]
    public ItemSetDto ItemSet { get; set; }

    [Parameter]
    public EventCallback<ItemSetDto> OnDelete { get; set; }

    protected async Task DeleteItemSet()
    {
        // TODO confirm dialog

        try
        {
            await ItemSetClient.DeleteItemSetAsync(ItemSet.Id);
            await OnDelete.InvokeAsync(ItemSet);
        }
        catch (Exception e)
        {
            Snackbar.Add("Something went wrong!", Severity.Error);
        }
    }

    protected void NavigateToDetails()
    {
        NavigationManager.NavigateTo($"item-sets/{ItemSet.Id}");
    }
}
